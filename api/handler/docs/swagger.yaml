definitions:
  communication.AddTravelTipsRequest:
    properties:
      author_id:
        type: string
      category:
        type: string
      content:
        type: string
      title:
        type: string
    type: object
  communication.AddTravelTipsResponse:
    properties:
      author_id:
        type: string
      category:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  communication.Author:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  communication.GetTravelTipsResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      tips:
        items:
          $ref: '#/definitions/communication.Tip'
        type: array
      total:
        type: integer
    type: object
  communication.GetUserStaticsResponse:
    properties:
      most_popular_itinerary:
        $ref: '#/definitions/communication.MostPopularItinerary'
      most_popular_story:
        $ref: '#/definitions/communication.MostPopularStory'
      total_comments_received:
        type: integer
      total_countries_visited:
        type: integer
      total_itineraries:
        type: integer
      total_likes_received:
        type: integer
      total_stories:
        type: integer
      user_id:
        type: string
    type: object
  communication.ListMessageResponse:
    properties:
      limit:
        type: integer
      message:
        items:
          $ref: '#/definitions/communication.Message'
        type: array
      page:
        type: integer
      total:
        type: integer
    type: object
  communication.Message:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      recipient:
        $ref: '#/definitions/communication.Recipient'
      sender:
        $ref: '#/definitions/communication.Sender'
    type: object
  communication.MostPopularItinerary:
    properties:
      id:
        type: string
      likes_count:
        type: integer
      title:
        type: string
    type: object
  communication.MostPopularStory:
    properties:
      id:
        type: string
      likes_count:
        type: integer
      title:
        type: string
    type: object
  communication.Recipient:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  communication.SendMessageRequest:
    properties:
      content:
        type: string
      recipient_id:
        type: string
      sende_id:
        type: string
    type: object
  communication.SendMessageResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      recipient_id:
        type: string
      sender_id:
        type: string
    type: object
  communication.Sender:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  communication.Tip:
    properties:
      author:
        $ref: '#/definitions/communication.Author'
      category:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  destination.Destination:
    properties:
      country:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      popular_activities:
        items:
          type: string
        type: array
    type: object
  destination.GetDestinationResponse:
    properties:
      average_cost_per_day:
        type: string
      best_time_to_visit:
        type: string
      country:
        type: string
      currency:
        type: string
      description:
        type: string
      id:
        type: string
      language:
        type: string
      name:
        type: string
      popular_activities:
        items:
          type: string
        type: array
      top_attractions:
        items:
          type: string
        type: array
    type: object
  destination.GetTrendDestinationResponse:
    properties:
      destinations:
        items:
          $ref: '#/definitions/destination.TrendDestination'
        type: array
      total:
        type: integer
    type: object
  destination.ListDetinationResponse:
    properties:
      destinations:
        items:
          $ref: '#/definitions/destination.Destination'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  destination.TrendDestination:
    properties:
      country:
        type: string
      id:
        type: string
      name:
        type: string
      popularity_score:
        type: string
      trending_reason:
        type: string
    type: object
  itineraries.Author:
    properties:
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  itineraries.Authors:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  itineraries.CreateItineraryRequest:
    properties:
      athor_id:
        type: string
      description:
        type: string
      distinations:
        items:
          $ref: '#/definitions/itineraries.Destination'
        type: array
      end_date:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  itineraries.CreateItineraryResponse:
    properties:
      author_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  itineraries.DeleteItineraryResponse:
    properties:
      message:
        type: string
    type: object
  itineraries.Destination:
    properties:
      activities:
        items:
          type: string
        type: array
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  itineraries.GetItineraryResponse:
    properties:
      author:
        $ref: '#/definitions/itineraries.Author'
      comments_count:
        type: integer
      created_at:
        type: string
      description:
        type: string
      destinations:
        $ref: '#/definitions/itineraries.Destination'
      end_date:
        type: string
      id:
        type: string
      likes_count:
        type: integer
      start_date:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  itineraries.Itinerary:
    properties:
      author:
        $ref: '#/definitions/itineraries.Authors'
      comments_count:
        type: string
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: string
      likes_count:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  itineraries.LeaveCommentRequest:
    properties:
      content:
        type: string
      id:
        type: string
    type: object
  itineraries.LeaveCommentResponse:
    properties:
      athor_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      itinerary_id:
        type: string
    type: object
  itineraries.ListItinerariesResponse:
    properties:
      itineraries:
        items:
          $ref: '#/definitions/itineraries.Itinerary'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  itineraries.UpdateItineraryRequest:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  itineraries.UpdateItineraryResponse:
    properties:
      author_id:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      start_date:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Errors:
    properties:
      message:
        type: string
    type: object
  stories.AddCommentRequest:
    properties:
      author_id:
        type: string
      content:
        type: string
      story_id:
        type: string
    type: object
  stories.AddCommentResponse:
    properties:
      author_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      story_id:
        type: string
    type: object
  stories.AddLikeRequest:
    properties:
      story_id:
        type: string
      user_id:
        type: string
    type: object
  stories.AddLikeResponse:
    properties:
      liked_at:
        type: string
      story_id:
        type: string
      user_id:
        type: string
    type: object
  stories.Author:
    properties:
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  stories.Authors:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  stories.Comment:
    properties:
      author:
        $ref: '#/definitions/stories.Authors'
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
    type: object
  stories.CreateTravelStoryRequest:
    properties:
      author_id:
        type: string
      content:
        type: string
      images:
        items:
          type: string
        type: array
      location:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  stories.CreateTravelStoryResponse:
    properties:
      author_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      location:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  stories.DeleteTravelStoryResponse:
    properties:
      message:
        type: string
    type: object
  stories.GetTravelStoryResponse:
    properties:
      author:
        $ref: '#/definitions/stories.Author'
      comments_count:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      likes_count:
        type: integer
      location:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
  stories.ListCommentsResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/stories.Comment'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  stories.ListTravelStoryResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      stories:
        items:
          $ref: '#/definitions/stories.TravelStory'
        type: array
      total:
        type: integer
    type: object
  stories.TravelStory:
    properties:
      author:
        $ref: '#/definitions/stories.Authors'
      comments_count:
        type: integer
      created_at:
        type: string
      id:
        type: string
      likes_count:
        type: integer
      location:
        type: string
      title:
        type: string
    type: object
  stories.UpdateTravelStoryRequest:
    properties:
      content:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  stories.UpdateTravelStoryResponse:
    properties:
      author_id:
        type: string
      content:
        type: string
      id:
        type: string
      location:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
  user.DeleteUserResponse:
    properties:
      message:
        type: string
    type: object
  user.FollowUserResponse:
    properties:
      follower_id:
        type: string
      following_at:
        type: string
      following_id:
        type: string
    type: object
  user.Follower:
    properties:
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  user.GetProfileResponse:
    properties:
      bio:
        type: string
      countries_visited:
        type: integer
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  user.GetUserActivityResponse:
    properties:
      comments_count:
        type: integer
      countries_visited:
        type: integer
      last_active:
        type: string
      likes_received:
        type: integer
      stories_count:
        type: integer
      user_id:
        type: string
    type: object
  user.ListFollowersResponse:
    properties:
      followers:
        items:
          $ref: '#/definitions/user.Follower'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  user.ListUsersResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/user.User'
        type: array
    type: object
  user.UpdateProfileRequest:
    properties:
      bio:
        type: string
      countries_visited:
        type: integer
      full_name:
        type: string
      id:
        type: string
    type: object
  user.UpdateProfileResponse:
    properties:
      bio:
        type: string
      countries_visited:
        type: integer
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  user.User:
    properties:
      countries_visited:
        type: integer
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for Auth Service.
  title: Auth Service API
  version: "1.0"
paths:
  /api/v1/destinations:
    get:
      consumes:
      - application/json
      description: List all Travel Destinations
      parameters:
      - description: User ID
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/destination.ListDetinationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: List Travel Destinations
      tags:
      - Destinations
  /api/v1/destinations/{destinationId}:
    get:
      consumes:
      - application/json
      description: Get a single Travel Destination by ID
      parameters:
      - description: Destination ID
        in: path
        name: destinationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/destination.GetDestinationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get Travel Destination
      tags:
      - Destinations
  /api/v1/destinations/trending:
    get:
      consumes:
      - application/json
      description: Get trending Travel Destinations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/destination.GetTrendDestinationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get Trend Travel Destinations
      tags:
      - Destinations
  /api/v1/itineraries:
    get:
      consumes:
      - application/json
      description: List all Itineraries
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/itineraries.ListItinerariesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: List Itineraries
      tags:
      - Itineraries
    post:
      consumes:
      - application/json
      description: Create new Itinerary
      parameters:
      - description: Itinerary
        in: body
        name: Itinerary
        required: true
        schema:
          $ref: '#/definitions/itineraries.CreateItineraryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/itineraries.CreateItineraryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Create Itinerary
      tags:
      - Itineraries
  /api/v1/itineraries/{itineraryId}:
    delete:
      consumes:
      - application/json
      description: Delete an existing Itinerary
      parameters:
      - description: Itinerary ID
        in: path
        name: itineraryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/itineraries.DeleteItineraryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Delete Itinerary
      tags:
      - Itineraries
    get:
      consumes:
      - application/json
      description: Get a single Itinerary by ID
      parameters:
      - description: Itinerary ID
        in: path
        name: itineraryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/itineraries.GetItineraryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get Itinerary
      tags:
      - Itineraries
    put:
      consumes:
      - application/json
      description: Update an existing Itinerary
      parameters:
      - description: Itinerary
        in: body
        name: Itinerary
        required: true
        schema:
          $ref: '#/definitions/itineraries.UpdateItineraryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/itineraries.UpdateItineraryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Update Itinerary
      tags:
      - Itineraries
  /api/v1/itineraries/{itineraryId}/comments:
    post:
      consumes:
      - application/json
      description: Leave a comment on an Itinerary
      parameters:
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/itineraries.LeaveCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/itineraries.LeaveCommentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Leave Comment on Itinerary
      tags:
      - Itineraries
  /api/v1/messages:
    get:
      consumes:
      - application/json
      description: List all messages
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/communication.ListMessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: List Messages
      tags:
      - Messages
    post:
      consumes:
      - application/json
      description: Send a message to a user
      parameters:
      - description: Message
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/communication.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/communication.SendMessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Send Message to User
      tags:
      - Messages
  /api/v1/stories:
    get:
      consumes:
      - application/json
      description: List all Travel Stories
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.ListTravelStoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: List Travel Stories
      tags:
      - Stories
    post:
      consumes:
      - application/json
      description: Create new Travel Story
      parameters:
      - description: TravelStory
        in: body
        name: TravelStory
        required: true
        schema:
          $ref: '#/definitions/stories.CreateTravelStoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.CreateTravelStoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Create Travel Story
      tags:
      - Stories
  /api/v1/stories/{storyId}:
    delete:
      consumes:
      - application/json
      description: Delete an existing Travel Story
      parameters:
      - description: Story ID
        in: path
        name: storyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.DeleteTravelStoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Delete Travel Story
      tags:
      - Stories
    get:
      consumes:
      - application/json
      description: Get a single Travel Story by ID
      parameters:
      - description: Story ID
        in: path
        name: storyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.GetTravelStoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get Travel Story
      tags:
      - Stories
    put:
      consumes:
      - application/json
      description: Update an existing Travel Story
      parameters:
      - description: TravelStory
        in: body
        name: TravelStory
        required: true
        schema:
          $ref: '#/definitions/stories.UpdateTravelStoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.UpdateTravelStoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Update Travel Story
      tags:
      - Stories
  /api/v1/stories/{storyId}/comments:
    get:
      consumes:
      - application/json
      description: List all comments of a Travel Story
      parameters:
      - description: Story ID
        in: path
        name: storyId
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.ListCommentsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: List Comments of Travel Story
      tags:
      - Stories
    post:
      consumes:
      - application/json
      description: Add a comment to a Travel Story
      parameters:
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/stories.AddCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.AddCommentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Add Comment to Travel Story
      tags:
      - Stories
  /api/v1/stories/{storyId}/like:
    post:
      consumes:
      - application/json
      description: Add a like to a Travel Story
      parameters:
      - description: Like
        in: body
        name: like
        required: true
        schema:
          $ref: '#/definitions/stories.AddLikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stories.AddLikeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Add Like to Travel Story
      tags:
      - Stories
  /api/v1/traveltips:
    post:
      consumes:
      - application/json
      description: Add new travel tips
      parameters:
      - description: Travel Tips
        in: body
        name: tips
        required: true
        schema:
          $ref: '#/definitions/communication.AddTravelTipsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/communication.AddTravelTipsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Add Travel Tips
      tags:
      - TravelTips
  /api/v1/traveltips/{tipId}:
    get:
      consumes:
      - application/json
      description: Get travel tips by ID
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Category
        in: query
        name: category
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/communication.GetTravelTipsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get Travel Tips
      tags:
      - TravelTips
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: GET List users
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ListUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - User
  /api/v1/users/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.DeleteUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - User
  /api/v1/users/{userId}/activity:
    get:
      consumes:
      - application/json
      description: Get user activity by user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserActivityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get user activity
      tags:
      - User
  /api/v1/users/{userId}/follow:
    post:
      consumes:
      - application/json
      description: Follow a user by ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.FollowUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Follow user
      tags:
      - User
  /api/v1/users/{userId}/followers:
    get:
      consumes:
      - application/json
      description: List followers of a user by user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ListFollowersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: List followers
      tags:
      - User
  /api/v1/users/{userId}/statistics:
    get:
      consumes:
      - application/json
      description: Get user statistics
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/communication.GetUserStaticsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get User Statistics
      tags:
      - User
  /api/v1/users/profile:
    get:
      consumes:
      - application/json
      description: Get user profile with user id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user profile with user id
      parameters:
      - description: UserProfile
        in: body
        name: UserProfile
        required: true
        schema:
          $ref: '#/definitions/user.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UpdateProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
